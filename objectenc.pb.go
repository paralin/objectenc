// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/objectenc/objectenc.proto

/*
Package objectenc is a generated protocol buffer package.

It is generated from these files:
	github.com/aperturerobotics/objectenc/objectenc.proto

It has these top-level messages:
	EncryptedBlob
*/
package objectenc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// EncryptionType is the object encryption type.
type EncryptionType int32

const (
	// EncryptionType_UNENCRYPTED is the unencrypted value.
	EncryptionType_EncryptionType_UNENCRYPTED EncryptionType = 0
	// EncryptionType_AES encrypts the data with an out-of-band hashed AES key.
	EncryptionType_EncryptionType_AES EncryptionType = 1
)

var EncryptionType_name = map[int32]string{
	0: "EncryptionType_UNENCRYPTED",
	1: "EncryptionType_AES",
}
var EncryptionType_value = map[string]int32{
	"EncryptionType_UNENCRYPTED": 0,
	"EncryptionType_AES":         1,
}

func (x EncryptionType) String() string {
	return proto.EnumName(EncryptionType_name, int32(x))
}
func (EncryptionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// EncryptedBlob contains a potentially encrypted blob of data.
type EncryptedBlob struct {
	// EncryptionType is the encryption type in use.
	EncType EncryptionType `protobuf:"varint,1,opt,name=enc_type,json=encType,enum=objectenc.EncryptionType" json:"enc_type,omitempty"`
	// EncData contains the encrypted data.
	EncData []byte `protobuf:"bytes,2,opt,name=enc_data,json=encData,proto3" json:"enc_data,omitempty"`
	// EncMetadata contains any metadata required for decryption.
	EncMetadata []byte `protobuf:"bytes,3,opt,name=enc_metadata,json=encMetadata,proto3" json:"enc_metadata,omitempty"`
}

func (m *EncryptedBlob) Reset()                    { *m = EncryptedBlob{} }
func (m *EncryptedBlob) String() string            { return proto.CompactTextString(m) }
func (*EncryptedBlob) ProtoMessage()               {}
func (*EncryptedBlob) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EncryptedBlob) GetEncType() EncryptionType {
	if m != nil {
		return m.EncType
	}
	return EncryptionType_EncryptionType_UNENCRYPTED
}

func (m *EncryptedBlob) GetEncData() []byte {
	if m != nil {
		return m.EncData
	}
	return nil
}

func (m *EncryptedBlob) GetEncMetadata() []byte {
	if m != nil {
		return m.EncMetadata
	}
	return nil
}

func init() {
	proto.RegisterType((*EncryptedBlob)(nil), "objectenc.EncryptedBlob")
	proto.RegisterEnum("objectenc.EncryptionType", EncryptionType_name, EncryptionType_value)
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/objectenc/objectenc.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4d, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0x2c, 0x48, 0x2d, 0x2a, 0x29, 0x2d, 0x4a, 0x2d,
	0xca, 0x4f, 0xca, 0x2f, 0xc9, 0x4c, 0x2e, 0xd6, 0xcf, 0x4f, 0xca, 0x4a, 0x4d, 0x2e, 0x49, 0xcd,
	0x4b, 0x46, 0xb0, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0xe1, 0x02, 0x4a, 0xcd, 0x8c,
	0x5c, 0xbc, 0xae, 0x79, 0xc9, 0x45, 0x95, 0x05, 0x25, 0xa9, 0x29, 0x4e, 0x39, 0xf9, 0x49, 0x42,
	0x26, 0x5c, 0x1c, 0xa9, 0x79, 0xc9, 0xf1, 0x25, 0x95, 0x05, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0x7c, 0x46, 0x92, 0x7a, 0x08, 0x03, 0xa0, 0x6a, 0x33, 0xf3, 0xf3, 0x42, 0x2a, 0x0b, 0x52, 0x83,
	0xd8, 0x53, 0xf3, 0x92, 0x41, 0x0c, 0x21, 0x49, 0x88, 0xae, 0x94, 0xc4, 0x92, 0x44, 0x09, 0x26,
	0x05, 0x46, 0x0d, 0x1e, 0xb0, 0x94, 0x4b, 0x62, 0x49, 0xa2, 0x90, 0x22, 0x17, 0x0f, 0x48, 0x2a,
	0x37, 0xb5, 0x24, 0x11, 0x2c, 0xcd, 0x0c, 0x96, 0xe6, 0x4e, 0xcd, 0x4b, 0xf6, 0x85, 0x0a, 0x69,
	0x79, 0x70, 0xf1, 0xa1, 0x1a, 0x2c, 0x24, 0xc7, 0x25, 0x85, 0x2a, 0x12, 0x1f, 0xea, 0xe7, 0xea,
	0xe7, 0x1c, 0x14, 0x19, 0x10, 0xe2, 0xea, 0x22, 0xc0, 0x20, 0x24, 0xc6, 0x25, 0x84, 0x26, 0xef,
	0xe8, 0x1a, 0x2c, 0xc0, 0x98, 0xc4, 0x06, 0xf6, 0xa1, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x41,
	0x6d, 0xd5, 0x62, 0x1a, 0x01, 0x00, 0x00,
}
